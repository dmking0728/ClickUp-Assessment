{"version":3,"file":"index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;ACAA,6C;;;;;;;;;;ACAA,wC;;;;;;;;;;ACAA,4C;;;;;;;;;;ACAA,yC;;;;;;;;;;ACAA,sC;;;;;;;;;;ACAA,kD;;;;;;;;;;ACAA,iC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNsD;AACM;AAQ7B;AACM;AACoB;AACI;AAEtC;AAEvB,MAAMY,YAAY,GAAG,CACjB;EAAEC,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAe,CAAC,EACxC;EAAED,KAAK,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAY,CAAC,EAC1C;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,CAC/C;AAEDd,oEAAiB,CAAC,uBAAuB,EAAE;EACvCe,KAAK,EAAEP,mDAAE,CAAC,uBAAuB,EAAE,kBAAkB,CAAC;EACtDQ,WAAW,EAAER,mDAAE,CAAC,8CAA8C,EAAE,kBAAkB,CAAC;EACnFS,QAAQ,EAAE,SAAS;EACnBC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,CACNX,mDAAE,CAAC,SAAS,EAAE,kBAAkB,CAAC,EACjCA,mDAAE,CAAC,SAAS,EAAE,kBAAkB,CAAC,EACjCA,mDAAE,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAClC;EACDY,UAAU,EAAE;IACRC,aAAa,EAAE;MACXC,IAAI,EAAE,OAAO;MACbC,OAAO,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY;IAC3D,CAAC;IACDC,UAAU,EAAE;MACRF,IAAI,EAAE,SAAS;MACfC,OAAO,EAAE;IACb,CAAC;IACDE,UAAU,EAAE;MACRH,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACb,CAAC;IACDG,OAAO,EAAE;MACLJ,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACb;EACJ,CAAC;EAEDI,IAAI,EAAE,SAAAA,CAAS;IAAEP,UAAU;IAAEQ;EAAc,CAAC,EAAE;IAC1C,MAAM;MAAEP,aAAa;MAAEG,UAAU;MAAEC,UAAU;MAAEC;IAAQ,CAAC,GAAGN,UAAU;IACrE,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGrB,4DAAQ,CAAC,IAAI,CAAC;IACpD,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,4DAAQ,CAAC,IAAI,CAAC;IAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,4DAAQ,CAAC,IAAI,CAAC;;IAExC;IACAC,6DAAS,CAAC,MAAM;MACZ,MAAMyB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;QACjC,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,cAAc,CAACC,OAAO,EAAE;YACjDC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;cACtBC,MAAM,EAAE,qBAAqB;cAC7BC,KAAK,EAAEP,cAAc,CAACO;YAC1B,CAAC;UACL,CAAC,CAAC;UAEF,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;UAEpC,IAAID,MAAM,CAACE,OAAO,EAAE;YAChBlB,cAAc,CAACgB,MAAM,CAACG,IAAI,CAAC;YAC3Bf,QAAQ,CAAC,IAAI,CAAC;UAClB,CAAC,MAAM;YACHA,QAAQ,CAACY,MAAM,CAACG,IAAI,IAAI,8BAA8B,CAAC;UAC3D;QACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;UACVhB,QAAQ,CAAC,iBAAiB,GAAGgB,GAAG,CAACC,OAAO,CAAC;QAC7C,CAAC,SAAS;UACNnB,UAAU,CAAC,KAAK,CAAC;QACrB;MACJ,CAAC;MAEDG,gBAAgB,CAAC,CAAC;IACtB,CAAC,EAAE,EAAE,CAAC;IAEN,MAAMiB,YAAY,GAAGA,CAACC,SAAS,EAAEC,SAAS,KAAK;MAC3C,MAAMC,QAAQ,GAAGD,SAAS,GACpB,CAAC,GAAGjC,aAAa,EAAEgC,SAAS,CAAC,GAC7BhC,aAAa,CAACmC,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKJ,SAAS,CAAC;MAEtDzB,aAAa,CAAC;QAAEP,aAAa,EAAEkC;MAAS,CAAC,CAAC;IAC9C,CAAC;IAED,OACIG,oDAAA,CAAAC,2CAAA,QACID,oDAAA,CAACzD,sEAAiB,QACdyD,oDAAA,CAACxD,4DAAS;MAACa,KAAK,EAAEP,mDAAE,CAAC,gBAAgB,EAAE,kBAAkB;IAAE,GACtDI,YAAY,CAACgD,GAAG,CAACH,IAAI,IAClBC,oDAAA,CAACvD,kEAAe;MACZ0D,GAAG,EAAEJ,IAAI,CAAC5C,KAAM;MAChBC,KAAK,EAAE2C,IAAI,CAAC3C,KAAM;MAClBgD,OAAO,EAAEzC,aAAa,CAAC0C,QAAQ,CAACN,IAAI,CAAC5C,KAAK,CAAE;MAC5CmD,QAAQ,EAAGV,SAAS,IAAKF,YAAY,CAACK,IAAI,CAAC5C,KAAK,EAAEyC,SAAS;IAAE,CAChE,CACJ,CACM,CAAC,EAEZI,oDAAA,CAACxD,4DAAS;MAACa,KAAK,EAAEP,mDAAE,CAAC,iBAAiB,EAAE,kBAAkB;IAAE,GACxDkD,oDAAA,CAACtD,gEAAa;MACVU,KAAK,EAAEN,mDAAE,CAAC,gBAAgB,EAAE,kBAAkB,CAAE;MAChDsD,OAAO,EAAEtC,UAAW;MACpBwC,QAAQ,EAAGnD,KAAK,IAAKe,aAAa,CAAC;QAAEJ,UAAU,EAAEX;MAAM,CAAC;IAAE,CAC7D,CAAC,EAEDW,UAAU,IACPkC,oDAAA,CAACrD,8DAAW;MACRS,KAAK,EAAEN,mDAAE,CAAC,aAAa,EAAE,kBAAkB,CAAE;MAC7CK,KAAK,EAAEY,UAAW;MAClBuC,QAAQ,EAAGnD,KAAK,IAAKe,aAAa,CAAC;QAAEH,UAAU,EAAEZ;MAAM,CAAC;IAAE,CAC7D,CAEE,CAAC,EAEZ6C,oDAAA,CAACxD,4DAAS;MAACa,KAAK,EAAEP,mDAAE,CAAC,cAAc,EAAE,kBAAkB;IAAE,GACrDkD,oDAAA,CAACrD,8DAAW;MACRS,KAAK,EAAEN,mDAAE,CAAC,iBAAiB,EAAE,kBAAkB,CAAE;MACjDK,KAAK,EAAEa,OAAQ;MACfsC,QAAQ,EAAGnD,KAAK,IAAKe,aAAa,CAAC;QAAEF,OAAO,EAAEb;MAAM,CAAC;IAAE,CAC1D,CACM,CACI,CAAC,EAEpB6C,oDAAA;MAAKO,SAAS,EAAC;IAAyB,GACnClC,OAAO,IACJ2B,oDAAA;MAAKO,SAAS,EAAC;IAAoB,GAC/BP,oDAAA,CAACpD,0DAAO,MAAE,CAAC,EACXoD,oDAAA,YAAIlD,mDAAE,CAAC,yBAAyB,EAAE,kBAAkB,CAAK,CACxD,CACR,EAEAyB,KAAK,IACFyB,oDAAA,CAACnD,yDAAM;MAAC2D,MAAM,EAAC,OAAO;MAACC,aAAa,EAAE;IAAM,GACvClC,KACG,CACX,EAEA,CAACF,OAAO,IAAI,CAACE,KAAK,IACfyB,oDAAA;MAAKO,SAAS,EAAC;IAAoB,GAC/BP,oDAAA,aAAKlD,mDAAE,CAAC,+BAA+B,EAAE,kBAAkB,CAAM,CAAC,EAClEkD,oDAAA,YAAIlD,mDAAE,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,EAAC,GAAC,EAACa,aAAa,CAAC+C,IAAI,CAAC,IAAI,CAAK,CAAC,EAC5E5C,UAAU,IACPkC,oDAAA;MAAKO,SAAS,EAAC;IAAmB,GAC9BP,oDAAA,iBAASlD,mDAAE,CAAC,SAAS,EAAE,kBAAkB,CAAU,CAAC,KAAC,EAACiB,UACrD,CACR,EAGDiC,oDAAA,CAAC/C,sEAAgB;MACb0D,KAAK,EAAC,uBAAuB;MAC7BjD,UAAU,EAAEA;IAAW,CAC1B,CACA,CAER,CACP,CAAC;EAEX,CAAC;EAEDkD,IAAI,EAAE,SAAAA,CAAA,EAAW;IACb;IACA,OAAO,IAAI;EACf;AACJ,CAAC,CAAC,C","sources":["webpack://cu-pricing-table/./src/editor.scss?0339","webpack://cu-pricing-table/external window [\"wp\",\"blockEditor\"]","webpack://cu-pricing-table/external window [\"wp\",\"blocks\"]","webpack://cu-pricing-table/external window [\"wp\",\"components\"]","webpack://cu-pricing-table/external window [\"wp\",\"element\"]","webpack://cu-pricing-table/external window [\"wp\",\"i18n\"]","webpack://cu-pricing-table/external window [\"wp\",\"serverSideRender\"]","webpack://cu-pricing-table/external window \"React\"","webpack://cu-pricing-table/webpack/bootstrap","webpack://cu-pricing-table/webpack/runtime/compat get default export","webpack://cu-pricing-table/webpack/runtime/define property getters","webpack://cu-pricing-table/webpack/runtime/hasOwnProperty shorthand","webpack://cu-pricing-table/webpack/runtime/make namespace object","webpack://cu-pricing-table/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { \n    PanelBody, \n    CheckboxControl, \n    ToggleControl, \n    TextControl,\n    Spinner,\n    Notice\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport ServerSideRender from '@wordpress/server-side-render';\n\nimport './editor.scss';\n\nconst PLAN_OPTIONS = [\n    { value: 'free', label: 'Free Forever' },\n    { value: 'unlimited', label: 'Unlimited' },\n    { value: 'business', label: 'Business' },\n    { value: 'enterprise', label: 'Enterprise' }\n];\n\nregisterBlockType('clickup/pricing-table', {\n    title: __('ClickUp Pricing Table', 'cu-pricing-table'),\n    description: __('Display ClickUp pricing plans with live data', 'cu-pricing-table'),\n    category: 'widgets',\n    icon: 'money-alt',\n    keywords: [\n        __('pricing', 'cu-pricing-table'),\n        __('clickup', 'cu-pricing-table'),\n        __('table', 'cu-pricing-table'),\n    ],\n    attributes: {\n        selectedPlans: {\n            type: 'array',\n            default: ['free', 'unlimited', 'business', 'enterprise']\n        },\n        showBanner: {\n            type: 'boolean',\n            default: false\n        },\n        bannerText: {\n            type: 'string',\n            default: 'AI-powered features available'\n        },\n        ctaText: {\n            type: 'string',\n            default: 'See more features'\n        }\n    },\n\n    edit: function({ attributes, setAttributes }) {\n        const { selectedPlans, showBanner, bannerText, ctaText } = attributes;\n        const [pricingData, setPricingData] = useState(null);\n        const [loading, setLoading] = useState(true);\n        const [error, setError] = useState(null);\n\n        // Fetch pricing data for preview\n        useEffect(() => {\n            const fetchPricingData = async () => {\n                try {\n                    const response = await fetch(clickupPricing.ajaxUrl, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/x-www-form-urlencoded',\n                        },\n                        body: new URLSearchParams({\n                            action: 'clickup_get_pricing',\n                            nonce: clickupPricing.nonce\n                        })\n                    });\n\n                    const result = await response.json();\n                    \n                    if (result.success) {\n                        setPricingData(result.data);\n                        setError(null);\n                    } else {\n                        setError(result.data || 'Failed to fetch pricing data');\n                    }\n                } catch (err) {\n                    setError('Network error: ' + err.message);\n                } finally {\n                    setLoading(false);\n                }\n            };\n\n            fetchPricingData();\n        }, []);\n\n        const onPlanChange = (planValue, isChecked) => {\n            const newPlans = isChecked \n                ? [...selectedPlans, planValue]\n                : selectedPlans.filter(plan => plan !== planValue);\n            \n            setAttributes({ selectedPlans: newPlans });\n        };\n\n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody title={__('Plan Selection', 'cu-pricing-table')}>\n                        {PLAN_OPTIONS.map(plan => (\n                            <CheckboxControl\n                                key={plan.value}\n                                label={plan.label}\n                                checked={selectedPlans.includes(plan.value)}\n                                onChange={(isChecked) => onPlanChange(plan.value, isChecked)}\n                            />\n                        ))}\n                    </PanelBody>\n                    \n                    <PanelBody title={__('Banner Settings', 'cu-pricing-table')}>\n                        <ToggleControl\n                            label={__('Show AI Banner', 'cu-pricing-table')}\n                            checked={showBanner}\n                            onChange={(value) => setAttributes({ showBanner: value })}\n                        />\n                        \n                        {showBanner && (\n                            <TextControl\n                                label={__('Banner Text', 'cu-pricing-table')}\n                                value={bannerText}\n                                onChange={(value) => setAttributes({ bannerText: value })}\n                            />\n                        )}\n                    </PanelBody>\n                    \n                    <PanelBody title={__('CTA Settings', 'cu-pricing-table')}>\n                        <TextControl\n                            label={__('CTA Button Text', 'cu-pricing-table')}\n                            value={ctaText}\n                            onChange={(value) => setAttributes({ ctaText: value })}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n\n                <div className=\"cu-pricing-table-editor\">\n                    {loading && (\n                        <div className=\"cu-pricing-loading\">\n                            <Spinner />\n                            <p>{__('Loading pricing data...', 'cu-pricing-table')}</p>\n                        </div>\n                    )}\n\n                    {error && (\n                        <Notice status=\"error\" isDismissible={false}>\n                            {error}\n                        </Notice>\n                    )}\n\n                    {!loading && !error && (\n                        <div className=\"cu-pricing-preview\">\n                            <h3>{__('ClickUp Pricing Table Preview', 'cu-pricing-table')}</h3>\n                            <p>{__('Selected plans:', 'cu-pricing-table')} {selectedPlans.join(', ')}</p>\n                            {showBanner && (\n                                <div className=\"cu-banner-preview\">\n                                    <strong>{__('Banner:', 'cu-pricing-table')}</strong> {bannerText}\n                                </div>\n                            )}\n                            \n                            {/* Server-side render for accurate preview */}\n                            <ServerSideRender\n                                block=\"clickup/pricing-table\"\n                                attributes={attributes}\n                            />\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    },\n\n    save: function() {\n        // Server-side rendered block\n        return null;\n    },\n});"],"names":["registerBlockType","InspectorControls","PanelBody","CheckboxControl","ToggleControl","TextControl","Spinner","Notice","__","useState","useEffect","ServerSideRender","PLAN_OPTIONS","value","label","title","description","category","icon","keywords","attributes","selectedPlans","type","default","showBanner","bannerText","ctaText","edit","setAttributes","pricingData","setPricingData","loading","setLoading","error","setError","fetchPricingData","response","fetch","clickupPricing","ajaxUrl","method","headers","body","URLSearchParams","action","nonce","result","json","success","data","err","message","onPlanChange","planValue","isChecked","newPlans","filter","plan","createElement","Fragment","map","key","checked","includes","onChange","className","status","isDismissible","join","block","save"],"sourceRoot":""}